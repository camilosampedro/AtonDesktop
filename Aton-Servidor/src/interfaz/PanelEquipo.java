/*
 * The MIT License
 *
 * Copyright 2015 Camilo Sampedro.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package interfaz;

import identidad.ServerComputer;

/**
 *
 * @author Camilo Sampedro
 * @version 0.1.0
 */
public class PanelEquipo extends javax.swing.JPanel {

    private ServerComputer equipo;
    private javax.swing.ImageIcon icono;

    /**
     * Creates new form PanelEquipo
     */
    private PanelEquipo() {
        initComponents();
    }

    public PanelEquipo(ServerComputer equipo) {
        this.equipo = equipo;
        asignarIcono();
        initComponents();
        btnEquipo.setText(Integer.toString(this.equipo.getComputerNumber()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEquipo = new javax.swing.JButton();
        cbSeleccion = new javax.swing.JCheckBox();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        btnEquipo.setIcon(icono);
        btnEquipo.setText("##");
        btnEquipo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEquipo.setIconTextGap(2);
        btnEquipo.setMargin(new java.awt.Insets(2, 4, 2, 4));
        btnEquipo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnEquipo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEquipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEquipoActionPerformed(evt);
            }
        });

        cbSeleccion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cbSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSeleccionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEquipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbSeleccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnEquipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbSeleccion)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEquipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEquipoActionPerformed
        // TODO add your handling code here:
        InterfazEquipo interfaz = new InterfazEquipo(this.equipo);
        interfaz.setVisible(true);
    }//GEN-LAST:event_btnEquipoActionPerformed

    private void cbSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSeleccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSeleccionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEquipo;
    private javax.swing.JCheckBox cbSeleccion;
    // End of variables declaration//GEN-END:variables

    private void asignarIcono() {
        if (equipo.isPoweredOn()) {
            if (equipo.isUsed()) {
                icono = new javax.swing.ImageIcon(getClass().getResource("/imagenes/IconoPC-11.png"));
            } else {
                icono = new javax.swing.ImageIcon(getClass().getResource("/imagenes/IconoPC-10.png"));
            }
        } else {
            icono = new javax.swing.ImageIcon(getClass().getResource("/imagenes/IconoPC-00.png"));
        }
    }
    
    public boolean estaCheckeado(){
        return cbSeleccion.isSelected();
    }
}
